npm install -g @angular/cli
এই কমান্ডটি Angular CLI-কে গ্লোবালভাবে (system-wide) install করে, যার ফলে আপনি যেকোনো প্রোজেক্ট বা ডিরেক্টরি থেকে ng কমান্ড ব্যবহার করতে পারবেন।

ng new my-angular-app
creates project

ng serve
to run the project

ng generate component component-name or ng g c blog-post
creates a component

ng g class user --type=model
creates a model

---------------------------------

Folder Structure 

Asset -> All kinds of static files like image.
Main.ts -> Entry point of the project
style.css  -> global css files
angular.json -> এই ফাইলটি অ্যাঙ্গুলার CLI দ্বারা ব্যবহৃত হয় এবং এটি প্রজেক্টের বিল্ড এবং ডেভেলপমেন্ট প্রক্রিয়াকে পরিচালনা করতে সাহায্য করে।
package.json -> এর কাজ সংক্ষেপে:
	1. Project Metadata store করে।
	2. Dependencies এবং devDependencies manage করে।
	3. Custom Scripts define করে।
	4. Configuration Options store করে।
	5. Project এর initialization এবং setup এ	 সাহায্য করে।
	এই ফাইলটি ছাড়া Angular বা যেকোনো Node.js project run করা সম্ভব নয়। এটি project এর heart এবং soul হিসেবে কাজ করে
tsconfig.app.json -> 
	1. tsconfig.app.json ফাইলটি Angular application এর TypeScript configuration define করে।
	2. এটি tsconfig.json কে extends করে এবং application-specific settings যোগ করে।
	3. এটি Angular build process এবং TypeScript compilation কে manage করে।
	এই ফাইলটি Angular application এর TypeScript setup এবং configuration এর জন্য অত্যন্ত গুরুত্বপূর্ণ!
tsconfig.json ->	
	1.tsconfig.json ফাইলটি TypeScript প্রোজেক্টের কনফিগারেশন ফাইল।
	2. এটি কম্পাইলার কীভাবে কোড ট্রান্সপাইল করবে তা কন্ট্রোল করে।
	3. এটি Angular, TypeScript, এবং অন্যান্য TypeScript-ভিত্তিক প্রোজেক্টের জন্য বাধ্যতামূলক।
	এই ফাইলটি সঠিকভাবে সেটআপ না থাকলে Angular বা TypeScript ঠিকমতো কাজ করবে না। 
	
----------------------

Event Bubbling : Event Bubbling হল একটি DOM ইভেন্ট প্রোপাগেশনের প্রক্রিয়া যেখানে একটি ইভেন্ট প্রথমে টার্গেট (innermost) এলিমেন্টে
 ট্রিগার হয় এবং তারপর ক্রমান্বয়ে তার প্যারেন্ট এবং পূর্বপুরুষ এলিমেন্টগুলিতে (ancestor elements) বুদবুদের মতো উপরে উঠতে থাকে যতক্ষণ না এটি রুট
 এলিমেন্ট বা ডকুমেন্ট অবজেক্টে পৌঁছায় 
 
Dependency Injection : যখন একটি ক্লাস ইনস্ট্যান্স তৈরি করার জন্য অন্য একটি ক্লাসের ইনস্ট্যান্স প্রয়োজন হয়, তখন সেটাকে ডিপেনডেন্সি ইনজেকশন (Dependency 
Injection - DI) বলে।

ডিপেনডেন্সি ইনজেকশন কীভাবে কাজ করে?
Angular-এ Dependency Injection এমন একটি পদ্ধতি যেখানে একটি ক্লাসের মধ্যে নির্দিষ্ট ডিপেনডেন্সি (যেমন, সার্ভিস, কম্পোনেন্ট, ইত্যাদি) constructor 
এর মাধ্যমে ইনজেক্ট করা হয়, যাতে সেই নির্দিষ্ট ক্লাস নির্ভরশীল (dependent) ক্লাসের ফিচারগুলো ব্যবহার করতে পারে।

@Injectable({ providedIn: 'root'}) if we use it in the service then we dont need to add the service 
in the app module's provider.

Data binding and two way data binding 

<input [(ngModel)]="email" type="text">
[(ngModel)]="email": এটি একটি দুই-পক্ষীয় বাইন্ডিং যা Angular এর একটি বৈশিষ্ট্য। এটি ইনপুট ফিল্ডের মানকে একটি কম্পোনেন্টের প্রপার্টির সাথে সংযুক্ত করে। 
এই ক্ষেত্রে, ইনপুট ফিল্ডের মান সরাসরি কম্পোনেন্টের email প্রপার্টির সাথে বাইন্ড হয়ে যায়
1. [ngModel]: এটি একমুখী বাইন্ডিং যা কম্পোনেন্টের প্রপার্টি থেকে ইনপুট ফিল্ডে value সেট করে।
2. (ngModel): এটি একমুখী বাইন্ডিং যা ইনপুট ফিল্ড থেকে কম্পোনেন্টের প্রপার্টিতে value আপডেট করে।

Angular Style Binding => works with DOM
1. NgStyIe
2. NgCIass